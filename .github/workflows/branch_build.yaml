name: Release Branch Images

on:
  workflow_dispatch:

jobs:
  build-git-workflows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: checkout
      - name: source-version
        id: source-version
        run: |
          echo "::set-output name=version::$(cat git-workflows/version)"
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: push-container-image
        with:
          image: git-workflows
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GHCR_TOKEN }}
          dockerfile: git-workflows/Containerfile
          directory:  git-workflows
          addLatest: true
          tags: ${{ steps.source-version.outputs.version }}-${{ github.ref_name }}
  build-maven:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: checkout
      - name: source-version
        id: source-version
        run: |
          echo "::set-output name=version::$(cat maven/version)"
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: push-container-image
        with:
          image: maven
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GHCR_TOKEN }}
          dockerfile: maven/Containerfile
          directory: maven
          addLatest: true
          tags: ${{ steps.source-version.outputs.version }}-${{ github.ref_name }}
  build-slack-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: checkout
      - name: source-version
        id: source-version
        run: |
          echo "::set-output name=version::$(cat slack-notifications/version)"
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: push-container-image
        with:
          image: slack-notification
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GHCR_TOKEN }}
          dockerfile: slack-notifications/Containerfile
          directory: slack-notifications
          addLatest: true
          tags: ${{ steps.source-version.outputs.version }}-${{ github.ref_name }}
  build-argocd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: checkout
      - name: source-version
        id: source-version
        run: |
          echo "::set-output name=version::$(cat argocd/version)"
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: push-container-image
        with:
          image: argocd
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GHCR_TOKEN }}
          dockerfile: argocd/Containerfile
          directory: argocd
          addLatest: true
          tags: ${{ steps.source-version.outputs.version }}-${{ github.ref_name }}
  notify:
    name: Slack Notifications
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs:
      - build-git-workflows
      - build-maven
      - build-slack-notification
      - build-argocd
    steps:
      - name: Notify Slack channel on failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/74975412?s=200&v=4
          SLACK_USERNAME: ${{ github.repository }}
          SLACK_COLOR: '#ff0033'
          SLACK_FOOTER: ''